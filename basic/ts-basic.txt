・TSはJSの記述で型が使える言語

・型を使うことでヒューマンエラーを未然に防ぐ事ができる

・TSはtscコマンドを使ってJSに変換してから実行

// 変数の宣言
let 変数名 :型名 = 値

// interfaceの宣言
interface 名前(先頭大文字) {
 key名: 型名
}

// オブジェクトの宣言
const 変数名: interface名 = {
  key名: value
}

// 配列の宣言
let 変数名 :型名[] = 配列の値

// 関数名の宣言
function 関数名(引数名: 型名): 戻り値の型名 {}

// クラスの宣言
class クラス名 implements interface定義 {}